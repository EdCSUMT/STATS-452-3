knitr::opts_chunk$set(echo = TRUE, message=FALSE)
library(tidyverse)
library(kableExtra)
library(pairwiseCI)
library(ggplot2)
library(GGally)
options(scipen = 99, digits = 2)
MwattsDatevsCostModel <- lm(Cost~Date + Mwatts, data=nuclearPowerStations)
nuclearPowerStations <- read_csv("NuclearPlants.csv")
MwattsDatevsCostModel
MwattsDatevsCostModel <- lm(Cost~Date + Mwatts, data=nuclearPowerStations)
MwattsDatevsCostModel
MwattsDatevsCostModel <- 55
MwattsDatevsCostModel
library(tidyverse)
library(kableExtra)
library(pairwiseCI)
library(ggplot2)
library(GGally)
nuclearPowerStations <- read_csv("NuclearPlants.csv")
MwattsDatevsCostModel <- lm(Cost~Date + Mwatts, data=nuclearPowerStations)
MwattsDatevsCostModel
LSLineDate <- lm(Cost~Date,data=nuclearPowerStations)
LSLineDate
LSLineMwatts <- lm(Cost~Mwatts,data=nuclearPowerStations)
LSLineMwatts
MwattsDatevsCostModel <- lm(Cost~Date + Mwatts, data=nuclearPowerStations)
MwattsDatevsCostModel
LSLineMwatts <- lm(Cost~Mwatts,data=nuclearPowerStations)
library(tidyverse)
library(kableExtra)
library(pairwiseCI)
library(ggplot2)
library(GGally)
nuclearPowerStations <- read_csv("NuclearPlants.csv")
ggplot(nuclearPowerStations, aes(x = Mwatts, y = Cost)) + geom_point() +
geom_smooth(method=lm,se=FALSE) + # add LS line
labs(title="Mwatts vs Cost", x="")
LSLineMwatts <- lm(Cost~Mwatts,data=nuclearPowerStations)
# residual plots Mwatts vs date since 1900
LSLineMwatts
ggplot(NULL,aes(x=predict(LSLineMwatts),y=resid(LSLineMwatts))) + geom_point() +
geom_hline(yintercept=0) + labs(title="Residual plot Mwatts vs Cost")
ggplot(nuclearPowerStations, aes(x = Mwatts, y = Cost)) + geom_point() +
geom_smooth(method=lm,se=FALSE) + # add LS line
labs(title="Mwatts vs Cost", x="")
LSLineMwatts <- lm(Cost~Mwatts,data=nuclearPowerStations)
# residual plots Mwatts vs date since 1900
ggplot(NULL,aes(x=predict(LSLineMwatts),y=resid(LSLineMwatts))) + geom_point() +
geom_hline(yintercept=0) + labs(title="Residual plot Mwatts vs Cost")
Residuals histogram cost vs date since 1900
LSLineDate <- lm(Cost~Date,data=nuclearPowerStations)
residual plots cost vs date since 1900
RegressionModelMwattsDate <- lm(Cost~Mwatts + Date,data=nuclearPowerStations)
RegressionModelMwattsDate
summary(LSLineMwatts)
summary(LSLineMwatts)$Coefficients
summary(LSLineMwatts)[0]
summary(LSLineMwatts)[0]$Coefficients
summary(LSLineMwatts)$Mwatts
s1 <- summary(LSLineMwatts)
string(s1)
str(s1)
s1$coefficients[1]
summary(LSLineMwatts)$coefficients
summary(LSLineMwatts)$coefficients[4]
summary(LSLineMwatts)$coefficients[6]
summary(LSLineMwatts)$coefficients[8]
RegressionModelMwattsDate
summary(RegressionModelMwattsDate)$coefficients[8]
summary(RegressionModelMwattsDate)$coefficients
summary(RegressionModelMwattsDate)$coefficients[10]
summary(RegressionModelMwattsDate)$coefficients[12]
summary(RegressionModelMwattsDate)$coefficients[11]
t.test(RegressionModelMwattsDate)
:
PredictMwats1000 <- data.frame(Mwatts =c(1000))
PredictMwats1000
MWattsCostPrediction <- predict(LSLineMwatts,newdata=PredictMwats1000,interval="prediction")
MWattsCostPrediction
str(MWattsCostPrediction)
str(MWattsCostPrediction)[1,1]
str(MWattsCostPrediction)
MWattsCostPrediction[1,1]
str(MWattsCostPrediction)
sigma(MWattsCostPrediction)
sigma(LSLineMwatts)
summary(LSLineMwatts)$r.squared * 100
knitr::opts_chunk$set(echo = TRUE, message=FALSE)
library(tidyverse)
library(kableExtra)
library(pairwiseCI)
library(ggplot2)
library(GGally)
options(scipen = 99, digits = 3)
SLRRsqred <- summary(LSLineMwatts)$r.squared * 100
SLRRsqred
ggplot(nuclearPowerStations,aes(x=Date,y=resid(LSLineMwatts))) + geom_point() +
geom_hline(yintercept=0) + labs(title="Residual plot Mwatts vs Cost")
ggplot(nuclearPowerStations,aes(x=predict(Date),y=resid(LSLineMwatts))) + geom_point() +
geom_hline(yintercept=0) + labs(title="Residual plot Mwatts vs Cost")
ggplot(nuclearPowerStations,aes(x=Date,y=resid(LSLineMwatts))) + geom_point() +
geom_hline(yintercept=0) + labs(title="Residual VS Date")
str(RegressionModelMwattsDate)
summary(RegressionModelMwattsDate)
str(summary(RegressionModelMwattsDate))
summary(RegressionModelMwattsDate)$coefficients[2]
summary(RegressionModelMwattsDate)$coefficients[3]
LSLineMwatts <- lm(Cost~Date,data=nuclearPowerStations)
LSLineMwatts
LSLineDate <- lm(Cost~Date,data=nuclearPowerStations)
LoggingDate <- read_csv("NuclearPlants.csv")
LoggingDate
LoggingDate <- read_csv("Logging.csv")
LoggingDate
LoggingDate
LoggingDate <- mutate(LoggingDate,group=as_factor(group))
LoggingDate
LoggingDate <- mutate(LoggingDate, group = fct_relevel(group,"Never_Logged","Logged_1_Year_Ago","Logged_8_Years_Ago")))
LoggingDate
LoggingDate <- mutate(LoggingDate, group = fct_relevel(group,"Never_Logged","Logged_1_Year_Ago","Logged_8_Years_Ago"))
LoggingDate
LoggingDate <- mutate(LoggingDate, group = fct_relevel(group,"NeverLogged","Logged1YearAgo","Logged8YearsAgo"))
LoggingData <- read_csv("Logging.csv")
# make group a factor
LoggingData <- mutate(LoggingData,group=as_factor(group))
LoggingData <- mutate(LoggingDate, group = fct_relevel(group,"NeverLogged","Logged1YearAgo","Logged8YearsAgo"))
LoggingData
# make group a factor
LoggingData <- mutate(LoggingData,group = as_factor(group))
LoggingData <- mutate(LoggingData, group = fct_relevel(group,"NeverLogged","Logged1YearAgo","Logged8YearsAgo"))
LoggingData <- mutate(LoggingData, group = fct_relevel(group,"NP","N/N85","N/R50"))
LoggingData <- mutate(LoggingData, group = fct_relevel(group,"NeverLogged","Logged1YearAgo","Logged8YearsAgo"))
LoggingData <- mutate(LoggingData, group = as_factor(group))
LoggingData
LoggingData <- mutate(LoggingData, group = fct_relevel(group,"Never","1YearAgo","8YearsAgo"))
warning()
warnings()
summary(LoggingData)
View(LoggingData)
LoggingData <- mutate(LoggingData,group=fct_recode(group,1='On',2='Off', 3='fdfd'))
LoggingData <- mutate(LoggingData,group=fct_recode(group,"1" ='On'))
LoggingData <- mutate(LoggingData,group=fct_recode(group, On = '1'))
LoggingData
LoggingData <- mutate(LoggingData,group=fct_recode(group, NeverLogged = '1', Logged1YearAgo = '2', Logged8YearsAgo = '3'))
LoggingData <- mutate(LoggingData,group=fct_recode(group, NeverLogged = '1', Logged1YearAgo = '2', Logged8YearsAgo = '3'
LoggingData
LoggingData <- mutate(LoggingData,group=fct_recode(group, NeverLogged = '1', LoggedYearAgo = '2'))
LoggingData <- mutate(LoggingData,group=fct_recode(group, NeverLogged = '1'))
LoggingData
LoggingData <- mutate(LoggingData,group=fct_recode(group, NeverLogged = '1'))
LoggingData <- mutate(LoggingData,group=fct_recode(group,On = "1"))
LoggingData <- mutate(LoggingData,group=fct_recode(group,"1" ='On'))
LoggingData
LoggingData <- mutate(LoggingData,group=fct_recode(group,"1" ='On'))
LoggingData <- mutate(LoggingData,group=fct_recode(group, 1 ='On'))
LoggingData <- mutate(LoggingData,group=fct_recode(group, On='1'))
LoggingData
LoggingData <- mutate(LoggingData,group=fct_recode(group, NeverLogged='1'))
LoggingData <- mutate(LoggingData,group=fct_recode(group, "NeverLogged"='1'))
LoggingData
LoggingData <- mutate(LoggingData,group=fct_recode(group, "NeverLogged"='1'))
LoggingData <- mutate(LoggingData,group=fct_recode(group, "On"='1'))
LoggingData
LoggingData <- mutate(LoggingData, group = as_factor(group))
LoggingData <- mutate(LoggingData, group = as_factor(group))
LoggingData <- mutate(LoggingData, group = as_factor(group))
LoggingData
LoggingData
LoggingData
knitr::opts_chunk$set(echo = TRUE, message=FALSE)
library(tidyverse)
library(kableExtra)
library(pairwiseCI)
library(ggplot2)
library(doBy)
library(GGally)
options(scipen = 99, digits = 3)
LoggingData
LoggingData
LoggingData <- mutate(LoggingData,group=fct_recode(group, NeverLogged='1', Logged1YearAgo = '2', Logged8YearsAgo = '3'))
LoggingData
View(LoggingData)
View(LoggingDate)
LoggingData <- mutate(LoggingData,group=fct_recode(group, NeverLogged='1', Logged1YearAgo = '2', Logged8YearsAgo = '3'))
LoggingData <- mutate(LoggingData,group=fct_recode(group, NeverLogged='1', Logged1YearAgo = '2', Logged8YearsAgo = '3'))
LoggingData
